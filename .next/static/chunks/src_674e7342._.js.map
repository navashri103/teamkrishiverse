{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/language-context.tsx"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useState, ReactNode } from 'react';\n\ntype Language = 'en' | 'ml';\n\ninterface LanguageContextType {\n  language: Language;\n  setLanguage: (language: Language) => void;\n  t: (key: string, section?: string) => string;\n}\n\nconst translations: { [key: string]: { [lang: string]: any } } = {\n    login: {\n        en: {\n            title: 'Mannova – Growing Together Sustainably',\n            description: 'Login using your phone number and OTP.',\n            phoneLabel: 'Phone Number',\n            phonePlaceholder: 'Enter your 10-digit phone number',\n            sendOtp: 'Send OTP',\n            otpLabel: 'Enter OTP',\n            otpPlaceholder: 'Enter 4-digit OTP',\n            aadhaarLabel: 'Aadhaar / Kisan ID (Optional)',\n            aadhaarPlaceholder: 'Enter your ID number',\n            consentLabel: 'I agree that Mannova will use my data only for farming benefits and government schemes.',\n            login: 'Login',\n            biometric: 'Login with Fingerprint',\n            voiceInstruction: 'Please enter your phone number.',\n            invalidPhone: \"Invalid Phone Number\",\n            invalidPhoneDesc: \"Please enter a valid 10-digit number.\",\n            otpSent: \"OTP Sent\",\n            otpSentDesc: \"An OTP has been sent to {phone}.\",\n            consentRequired: \"Consent Required\",\n            consentRequiredDesc: \"Please agree to the terms to continue.\",\n            invalidOtp: \"Invalid OTP\",\n            invalidOtpDesc: \"Please enter the 4-digit OTP.\",\n            consentBiometric: \"Please agree to the terms to use biometric login.\",\n            biometricLogin: \"Biometric Login\",\n            biometricLoginDesc: \"Please use your fingerprint or face to log in.\",\n            loginSuccess: \"Login Successful\",\n            noAccount: \"Don't have an account?\",\n            registerNow: \"Register Now\"\n        },\n        ml: {\n            title: 'മന്നോവ – ഒരുമിച്ച് സുസ്ഥിരമായി വളരാം',\n            description: 'നിങ്ങളുടെ ഫോൺ നമ്പറും OTP-യും ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക.',\n            phoneLabel: 'ഫോൺ നമ്പർ',\n            phonePlaceholder: 'നിങ്ങളുടെ 10 അക്ക ഫോൺ നമ്പർ നൽകുക',\n            sendOtp: 'OTP അയയ്‌ക്കുക',\n            otpLabel: 'OTP നൽകുക',\n            otpPlaceholder: '4 അക്ക OTP നൽകുക',\n            aadhaarLabel: 'ആധാർ / കിസാൻ ഐഡി (ഓപ്ഷണൽ)',\n            aadhaarPlaceholder: 'നിങ്ങളുടെ ഐഡി നമ്പർ നൽകുക',\n            consentLabel: 'കർഷകർക്കുള്ള ആനുകൂല്യങ്ങൾക്കും സർക്കാർ പദ്ധതികൾക്കും വേണ്ടി മാത്രം മന്നോവ എന്റെ ഡാറ്റ ഉപയോഗിക്കുമെന്ന് ഞാൻ സമ്മതിക്കുന്നു.',\n            login: 'ലോഗിൻ ചെയ്യുക',\n            biometric: 'വിരലടയാളം ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക',\n            voiceInstruction: 'ദയവായി നിങ്ങളുടെ ഫോൺ നമ്പർ നൽകുക.',\n            invalidPhone: \"തെറ്റായ ഫോൺ നമ്പർ\",\n            invalidPhoneDesc: \"ദയവായി 10 അക്ക നമ്പർ നൽകുക.\",\n            otpSent: \"OTP അയച്ചു\",\n            otpSentDesc: \"{phone} എന്ന നമ്പറിലേക്ക് ഒരു OTP അയച്ചിട്ടുണ്ട്.\",\n            consentRequired: \"സമ്മതം ആവശ്യമാണ്\",\n            consentRequiredDesc: \"തുടരാൻ ദയവായി നിബന്ധനകൾ അംഗീകരിക്കുക.\",\n            invalidOtp: \"തെറ്റായ ഒ.ടി.പി\",\n            invalidOtpDesc: \"ദയവായി 4 അക്ക OTP നൽകുക.\",\n            consentBiometric: \"ബയോമെട്രിക് ലോഗിൻ ഉപയോഗിക്കുന്നതിന് ദയവായി നിബന്ധനകൾ അംഗീകരിക്കുക.\",\n            biometricLogin: \"ബയോമെട്രിക് ലോഗിൻ\",\n            biometricLoginDesc: \"ലോഗിൻ ചെയ്യാൻ നിങ്ങളുടെ വിരലടയാളം അല്ലെങ്കിൽ മുഖം ഉപയോഗിക്കുക.\",\n            loginSuccess: \"ലോഗിൻ വിജയിച്ചു\",\n            noAccount: \"അക്കൗണ്ട് ഇല്ലേ?\",\n            registerNow: \"ഇപ്പോൾ രജിസ്റ്റർ ചെയ്യുക\"\n        }\n    },\n    register: {\n        en: {\n            createAccount: \"Create a Mannova Account\",\n            step: \"Step\",\n            step1Title: \"Personal Details\",\n            step2Title: \"Farm Details\",\n            step3Title: \"Document Upload\",\n            fullName: \"Full Name\",\n            fullNamePlaceholder: \"Enter your full name\",\n            email: \"Email (Optional)\",\n            emailPlaceholder: \"Enter your email\",\n            aadhaarNumber: \"Aadhaar Number (Optional)\",\n            aadhaarPlaceholder: \"Enter 12-digit Aadhaar\",\n            next: \"Next\",\n            back: \"Back\",\n            state: \"State\",\n            selectState: \"Select State\",\n            district: \"District\",\n            selectDistrict: \"Select District\",\n            village: \"Village / Panchayat\",\n            villagePlaceholder: \"Enter your village or panchayat\",\n            landType: \"Land Type\",\n            selectLandType: \"Select Land Type\",\n            landTypeIrrigated: \"Irrigated\",\n            landTypeRainfed: \"Rainfed\",\n            landSize: \"Land Size (in acres)\",\n            landSizePlaceholder: \"e.g., 2.5\",\n            crops: \"Main Crop(s) Grown\",\n            selectCrops: \"Select one or more crops\",\n            cropPaddy: \"Paddy\",\n            cropWheat: \"Wheat\",\n            cropCoconut: \"Coconut\",\n            cropVegetables: \"Vegetables\",\n            cropRubber: \"Rubber\",\n            cropSugarcane: \"Sugarcane\",\n            cropCotton: \"Cotton\",\n            uploadAadhaar: \"Upload Aadhaar Proof (PDF/Image)\",\n            uploadLandDoc: \"Upload Land Ownership Proof (PDF/Image)\",\n            livePhoto: \"Live Photo of Your Farm/Crop\",\n            capturePhoto: \"Capture Photo\",\n            retakePhoto: \"Retake Photo\",\n            submit: \"Submit Registration\",\n            cameraError: \"Camera Access Denied\",\n            cameraErrorDesc: \"Please enable camera permissions in your browser settings.\",\n            cameraAccessRequired: \"Camera Access Required\",\n            cameraAccessRequiredDesc: \"Please allow camera access to use this feature.\",\n            registrationSuccess: \"Registration successful! Redirecting to login...\"\n        },\n        ml: {\n            createAccount: \"മന്നോവ അക്കൗണ്ട് ഉണ്ടാക്കുക\",\n            step: \"ഘട്ടം\",\n            step1Title: \"വ്യക്തിഗത വിവരങ്ങൾ\",\n            step2Title: \"കൃഷിസ്ഥലത്തിന്റെ വിശദാംശങ്ങൾ\",\n            step3Title: \"രേഖകൾ അപ്‌ലോഡ് ചെയ്യുക\",\n            fullName: \"മുഴുവൻ പേര്\",\n            fullNamePlaceholder: \"നിങ്ങളുടെ മുഴുവൻ പേര് നൽകുക\",\n            email: \"ഇമെയിൽ (ഓപ്ഷണൽ)\",\n            emailPlaceholder: \"നിങ്ങളുടെ ഇമെയിൽ നൽകുക\",\n            aadhaarNumber: \"ആധാർ നമ്പർ (ഓപ്ഷണൽ)\",\n            aadhaarPlaceholder: \"12 അക്ക ആധാർ നൽകുക\",\n            next: \"അടുത്തത്\",\n            back: \"പുറകോട്ട്\",\n            state: \"സംസ്ഥാനം\",\n            selectState: \"സംസ്ഥാനം തിരഞ്ഞെടുക്കുക\",\n            district: \"ജില്ല\",\n            selectDistrict: \"ജില്ല തിരഞ്ഞെടുക്കുക\",\n            village: \"ഗ്രാമം / പഞ്ചായത്ത്\",\n            villagePlaceholder: \"നിങ്ങളുടെ ഗ്രാമം അല്ലെങ്കിൽ പഞ്ചായത്ത് നൽകുക\",\n            landType: \"ഭൂമിയുടെ തരം\",\n            selectLandType: \"ഭൂമിയുടെ തരം തിരഞ്ഞെടുക്കുക\",\n            landTypeIrrigated: \"ജലസേചനമുള്ളത്\",\n            landTypeRainfed: \"മഴയെ ആശ്രയിച്ചത്\",\n            landSize: \"സ്ഥലത്തിന്റെ അളവ് (ഏക്കറിൽ)\",\n            landSizePlaceholder: \"ഉദാഹരണത്തിന്, 2.5\",\n            crops: \"പ്രധാന വിളകൾ\",\n            selectCrops: \"ഒന്നോ അതിലധികമോ വിളകൾ തിരഞ്ഞെടുക്കുക\",\n            cropPaddy: \"നെല്ല്\",\n            cropWheat: \"ഗോതമ്പ്\",\n            cropCoconut: \"ತೆങ്ങ്\",\n            cropVegetables: \"പച്ചക്കറികൾ\",\n            cropRubber: \"റബ്ബർ\",\n            cropSugarcane: \"കരിമ്പ്\",\n            cropCotton: \"പരുത്തി\",\n            uploadAadhaar: \"ആധാർ രേഖ അപ്‌ലോഡ് ചെയ്യുക (PDF/ചിത്രം)\",\n            uploadLandDoc: \"ഭൂവുടമസ്ഥാവകാശ രേഖ അപ്‌ലോഡ് ചെയ്യുക (PDF/ചിത്രം)\",\n            livePhoto: \"നിങ്ങളുടെ കൃഷിസ്ഥലത്തിന്റെ/വിളയുടെ ലൈവ് ഫോട്ടോ\",\n            capturePhoto: \"ഫോട്ടോ എടുക്കുക\",\n            retakePhoto: \"വീണ്ടും ഫോട്ടോ എടുക്കുക\",\n            submit: \"രജിസ്ട്രേഷൻ സമർപ്പിക്കുക\",\n            cameraError: \"ക്യാമറ അനുമതി നിഷേധിച്ചു\",\n            cameraErrorDesc: \"നിങ്ങളുടെ ബ്രൗസർ ക്രമീകരണങ്ങളിൽ ക്യാമറ അനുമതികൾ പ്രവർത്തനക്ഷമമാക്കുക.\",\n            cameraAccessRequired: \"ക്യാമറ അനുമതി ആവശ്യമാണ്\",\n            cameraAccessRequiredDesc: \"ഈ ഫീച്ചർ ഉപയോഗിക്കാൻ ക്യാമറ ആക്‌സസ് അനുവദിക്കുക.\",\n            registrationSuccess: \"രജിസ്ട്രേഷൻ വിജയിച്ചു! ലോഗിൻ പേജിലേക്ക് പോകുന്നു...\"\n        }\n    },\n    dashboard: {\n        en: {\n            totalPoints: \"Total Points\",\n            thisMonth: \"+{points} this month\",\n            badgesEarned: \"Badges Earned\",\n            more: \"+{count} more\",\n            leaderboardRank: \"Leaderboard Rank\",\n            topPercent: \"Top {percent}% in your district\",\n            activeChallenge: \"Active Challenge\",\n            tasksTitle: \"Tasks\",\n            crop: \"Crop\",\n            selectCrop: \"Select a crop\",\n            noTasks: \"No tasks for the selected crop today.\",\n            pendingTasks: \"Today's Tasks\",\n            completedTasks: \"Completed\",\n            noCompletedTasks: \"You haven't completed any tasks for this crop yet.\"\n        },\n        ml: {\n            totalPoints: \"ആകെ പോയിന്റുകൾ\",\n            thisMonth: \"+{points} ഈ മാസം\",\n            badgesEarned: \"നേടിയ ബാഡ്ജുകൾ\",\n            more: \"+{count} കൂടുതൽ\",\n            leaderboardRank: \"ലീഡർബോർഡ് റാങ്ക്\",\n            topPercent: \"നിങ്ങളുടെ ജില്ലയിൽ മികച്ച {percent}%\",\n            activeChallenge: \"സജീവമായ ചലഞ്ച്\",\n            tasksTitle: \"ടാസ്ക്കുകൾ\",\n            crop: \"വിള\",\n            selectCrop: \"ഒരു വിള തിരഞ്ഞെടുക്കുക\",\n            noTasks: \"തിരഞ്ഞെടുത്ത വിളയ്ക്ക് ഇന്ന് ടാസ്‌ക്കുകളൊന്നുമില്ല.\",\n            pendingTasks: \"ഇന്നത്തെ ടാസ്ക്കുകൾ\",\n            completedTasks: \"പൂർത്തിയായവ\",\n            noCompletedTasks: \"ഈ വിളയുമായി ബന്ധപ്പെട്ട ടാസ്ക്കുകൾ നിങ്ങൾ ഇതുവരെ പൂർത്തിയാക്കിയിട്ടില്ല.\"\n        }\n    },\n    tasks: {\n        en: {\n            'Check Soil Moisture': 'Check Soil Moisture',\n            'Ensure soil is moist but not waterlogged.': 'Ensure soil is moist but not waterlogged.',\n            'Apply Organic Fertilizer': 'Apply Organic Fertilizer',\n            'Use compost or manure to enrich the soil.': 'Use compost or manure to enrich the soil.',\n            'Scout for Pests': 'Scout for Pests',\n            'Look for common pests like stem borers.': 'Look for common pests like stem borers.',\n            'Repair Irrigation Drip Lines': 'Repair Irrigation Drip Lines',\n            'Check for leaks and clogs to conserve water.': 'Check for leaks and clogs to conserve water.',\n            'Add Mulch Layer': 'Add Mulch Layer',\n            'Apply a layer of straw or leaves to retain moisture.': 'Apply a layer of straw or leaves to retain moisture.',\n            'Prune Lower Leaves': 'Prune Lower Leaves',\n            'Improve air circulation to prevent fungal diseases.': 'Improve air circulation to prevent fungal diseases.',\n            'Prepare Land for Planting': 'Prepare Land for Planting',\n            'Plow and level the field for the upcoming season.': 'Plow and level the field for the upcoming season.',\n            'Test Soil pH': 'Test Soil pH',\n            'Check if the soil pH is optimal for wheat growth (6.0-7.0).': 'Check if the soil pH is optimal for wheat growth (6.0-7.0).',\n            'Check for Sugarcane Borers': 'Check for Sugarcane Borers',\n            'Inspect stalks for signs of borer infestation.': 'Inspect stalks for signs of borer infestation.',\n            'Detrashing Sugarcane': 'Detrashing Sugarcane',\n            'Remove dry leaves to improve air circulation.': 'Remove dry leaves to improve air circulation.',\n            'Monitor for Bollworms': 'Monitor for Bollworms',\n            'Check cotton plants for bollworm eggs and larvae.': 'Check cotton plants for bollworm eggs and larvae.',\n            'Apply Neem Oil Spray': 'Apply Neem Oil Spray',\n            'Use neem oil as a natural insecticide for cotton.': 'Use neem oil as a natural insecticide for cotton.',\n        },\n        ml: {\n            'Check Soil Moisture': 'മണ്ണിലെ ഈർപ്പം പരിശോധിക്കുക',\n            'Ensure soil is moist but not waterlogged.': 'മണ്ണ് ഈർപ്പമുള്ളതാണെന്നും എന്നാൽ വെള്ളം കെട്ടിനിൽക്കുന്നില്ലെന്നും ഉറപ്പാക്കുക.',\n            'Apply Organic Fertilizer': 'ജൈവവളം പ്രയോഗിക്കുക',\n            'Use compost or manure to enrich the soil.': ' മണ്ണിനെ സമ്പുഷ്ടമാക്കാൻ കമ്പോസ്റ്റോ ചാണകമോ ഉപയോഗിക്കുക.',\n            'Scout for Pests': 'കീടങ്ങളെ കണ്ടെത്തുക',\n            'Look for common pests like stem borers.': 'തണ്ടുതുരപ്പൻ പോലുള്ള സാധാരണ കീടങ്ങളെ കണ്ടെത്തുക.',\n            'Repair Irrigation Drip Lines': 'ഡ്രിപ്പ് ലൈനുകൾ നന്നാക്കുക',\n            'Check for leaks and clogs to conserve water.': 'വെള്ളം സംരക്ഷിക്കാൻ ചോർച്ചകളും തടസ്സങ്ങളും പരിശോധിക്കുക.',\n            'Add Mulch Layer': 'പുതയിടുക',\n            'Apply a layer of straw or leaves to retain moisture.': 'ഈർപ്പം നിലനിർത്താൻ വൈക്കോലിന്റെയോ ഇലകളുടെയോ ഒരു പാളി പ്രയോഗിക്കുക.',\n            'Prune Lower Leaves': 'താഴത്തെ ഇലകൾ മുറിക്കുക',\n            'Improve air circulation to prevent fungal diseases.': 'ഫംഗസ് രോഗങ്ങൾ തടയാൻ വായുസഞ്ചാരം മെച്ചപ്പെടുത്തുക.',\n            'Prepare Land for Planting': 'നടീലിനായി നിലമൊരുക്കുക',\n            'Plow and level the field for the upcoming season.': 'വരുന്ന സീസണിനായി വയൽ ഉഴുതു നിരപ്പാക്കുക.',\n            'Test Soil pH': 'മണ്ണിന്റെ പി.എച്ച് പരിശോധിക്കുക',\n            'Check if the soil pH is optimal for wheat growth (6.0-7.0).': 'ഗോതമ്പ് വളർച്ചയ്ക്ക് മണ്ണിന്റെ പിഎച്ച് അനുയോജ്യമാണോയെന്ന് പരിശോധിക്കുക (6.0-7.0).',\n            'Check for Sugarcane Borers': 'കരിമ്പിലെ തണ്ടുതുരപ്പനെ പരിശോധിക്കുക',\n            'Inspect stalks for signs of borer infestation.': 'തണ്ടുകളിൽ തുരപ്പന്റെ ലക്ഷണങ്ങളുണ്ടോ എന്ന് പരിശോധിക്കുക.',\n            'Detrashing Sugarcane': 'കരിമ്പിലെ ഉണങ്ങിയ ഇലകൾ നീക്കം ചെയ്യുക',\n            'Remove dry leaves to improve air circulation.': 'വായുസഞ്ചാരം മെച്ചപ്പെടുത്താൻ ഉണങ്ങിയ ഇലകൾ നീക്കം ചെയ്യുക.',\n            'Monitor for Bollworms': 'കായ്തുരപ്പനെ നിരീക്ഷിക്കുക',\n            'Check cotton plants for bollworm eggs and larvae.': 'പരുത്തിച്ചെടികളിൽ കായ്തുരപ്പന്റെ മുട്ടകളും ലാർവകളും ഉണ്ടോയെന്ന് പരിശോധിക്കുക.',\n            'Apply Neem Oil Spray': 'വേപ്പെണ്ണ തളിക്കുക',\n            'Use neem oil as a natural insecticide for cotton.': 'പരുത്തിക്ക് സ്വാഭാവിക കീടനാശിനിയായി വേപ്പെണ്ണ ഉപയോഗിക്കുക.',\n        }\n    },\n    common: {\n        en: {\n            navDashboard: 'Dashboard',\n            navDocVerification: 'Doc Verification',\n            navCommunity: 'Community',\n            navBlog: 'Blog',\n            navAbout: 'About Us',\n            navContact: 'Contact',\n            navSettings: 'Settings',\n            headerProfile: 'Profile',\n            headerSettings: 'Settings',\n            headerLogout: 'Logout',\n            sidebarTipTitle: 'Sustainable Tip',\n            sidebarLearnMore: 'Learn More',\n            sidebarTipError: 'Could not load a tip right now. Please try again later.'\n        },\n        ml: {\n            navDashboard: 'ഡാഷ്ബോർഡ്',\n            navDocVerification: 'രേഖ പരിശോധന',\n            navCommunity: 'ചർച്ചാവേദി',\n            navBlog: 'ബ്ലോഗ്',\n            navAbout: 'ഞങ്ങളെക്കുറിച്ച്',\n            navContact: 'ബന്ധപ്പെടുക',\n            navSettings: 'ക്രമീകരണങ്ങൾ',\n            headerProfile: 'പ്രൊഫൈൽ',\n            headerSettings: 'ക്രമീകരണങ്ങൾ',\n            headerLogout: 'ലോഗ്ഔട്ട്',\n            sidebarTipTitle: 'സുസ്ഥിരമായ സൂചന',\n            sidebarLearnMore: 'കൂടുതലറിയുക',\n            sidebarTipError: 'ഇപ്പോൾ ഒരു സൂചന ലോഡ് ചെയ്യാൻ കഴിഞ്ഞില്ല. ദയവായി പിന്നീട് ശ്രമിക്കുക.'\n        }\n    },\n    profile: {\n        en: {\n            profileFarmerId: \"Farmer ID\",\n            profileJoined: \"Joined on\",\n            profileGamificationStats: \"Gamification Stats\",\n            profileLevel: \"Level\",\n            profilePointsToNextLevel: \"points to next level\"\n        },\n        ml: {\n            profileFarmerId: \"കർഷക ഐഡി\",\n            profileJoined: \"ചേർന്ന തീയതി\",\n            profileGamificationStats: \"ഗെയിമിഫിക്കേഷൻ സ്ഥിതിവിവരക്കണക്കുകൾ\",\n            profileLevel: \"ലെവൽ\",\n            profilePointsToNextLevel: \"അടുത്ത ലെവലിലേക്ക് പോയിന്റുകൾ\"\n        }\n    },\n    badges: {\n        en: {\n            'Eco-Warrior': 'Eco-Warrior',\n            'Completed 10 soil health tasks': 'Completed 10 soil health tasks',\n            'Water-Saver': 'Water-Saver',\n            'Completed 5 water management tasks': 'Completed 5 water management tasks'\n        },\n        ml: {\n            'Eco-Warrior': 'പരിസ്ഥിതി യോദ്ധാവ്',\n            'Completed 10 soil health tasks': '10 മണ്ണ് ആരോഗ്യ ടാസ്ക്കുകൾ പൂർത്തിയാക്കി',\n            'Water-Saver': 'ജലസംരക്ഷകൻ',\n            'Completed 5 water management tasks': '5 ജലപരിപാലന ടാസ്ക്കുകൾ പൂർത്തിയാക്കി'\n        }\n    },\n    docVerification: {\n        en: {\n            landDocument: \"Land Document\",\n            aadhaarCard: \"Aadhaar Card\",\n            landDocVerificationTitle: \"Land Document Verification\",\n            landDocVerificationDesc: \"Upload a photo of your land ownership document. Our AI will analyze it for authenticity.\",\n            readPageContent: \"Read page content\",\n            landDocPhoto: \"Document Photo\",\n            landDocPreviewAlt: \"Document preview\",\n            verifyDocument: \"Verify Document\",\n            aiAnalyzing: \"AI is analyzing your document, please wait...\",\n            verificationResult: \"Verification Result\",\n            authentic: \"Authentic\",\n            notAuthentic: \"Not Authentic\",\n            confidenceScore: \"Confidence Score\",\n            aiReasoning: \"AI's Reasoning\",\n            noFileSelectedTitle: \"No file selected\",\n            noLandDocFileSelectedDesc: \"Please select a document image to verify.\",\n            verificationFailedTitle: \"Verification Failed\",\n            verificationFailedDesc: \"An error occurred during document verification.\",\n            aadhaarVerificationTitle: \"Aadhaar Card Verification\",\n            aadhaarVerificationDesc: \"Upload a photo of your Aadhaar card. Our AI will analyze it for authenticity and extract key information.\",\n            aadhaarPhoto: \"Aadhaar Photo\",\n            aadhaarPreviewAlt: \"Aadhaar preview\",\n            noAadhaarFileSelectedDesc: \"Please select an Aadhaar image to verify.\",\n            extractedInfo: \"Extracted Information\",\n            name: \"Name\",\n            aadhaarNumber: \"Aadhaar Number\",\n            dob: \"Date of Birth\",\n            gender: \"Gender\"\n        },\n        ml: {\n            landDocument: \"ഭൂരേഖ\",\n            aadhaarCard: \"ആധാർ കാർഡ്\",\n            landDocVerificationTitle: \"ഭൂരേഖ പരിശോധന\",\n            landDocVerificationDesc: \"നിങ്ങളുടെ ഭൂരേഖയുടെ ഫോട്ടോ അപ്‌ലോഡ് ചെയ്യുക. ഞങ്ങളുടെ AI അതിന്റെ ആധികാരികത വിശകലനം ചെയ്യും.\",\n            readPageContent: \"പേജിലെ ഉള്ളടക്കം വായിക്കുക\",\n            landDocPhoto: \"രേഖയുടെ ഫോട്ടോ\",\n            landDocPreviewAlt: \"രേഖയുടെ പ്രിവ്യൂ\",\n            verifyDocument: \"രേഖ പരിശോധിക്കുക\",\n            aiAnalyzing: \"AI നിങ്ങളുടെ പ്രമാണം വിശകലനം ചെയ്യുന്നു, ദയവായി കാത്തിരിക്കുക...\",\n            verificationResult: \"പരിശോധനാ ഫലം\",\n            authentic: \"ആധികാരികമാണ്\",\n            notAuthentic: \"ആധികാരികമല്ല\",\n            confidenceScore: \"ആത്മവിശ്വാസ സ്കോർ\",\n            aiReasoning: \"AI-യുടെ കാരണം\",\n            noFileSelectedTitle: \"ഫയൽ തിരഞ്ഞെടുത്തിട്ടില്ല\",\n            noLandDocFileSelectedDesc: \"പരിശോധിക്കാൻ ഒരു ഭൂരേഖയുടെ ചിത്രം തിരഞ്ഞെടുക്കുക.\",\n            verificationFailedTitle: \"പരിശോധന പരാജയപ്പെട്ടു\",\n            verificationFailedDesc: \"രേഖ പരിശോധിക്കുന്നതിൽ ഒരു പിശക് സംഭവിച്ചു.\",\n            aadhaarVerificationTitle: \"ആധാർ കാർഡ് പരിശോധന\",\n            aadhaarVerificationDesc: \"നിങ്ങളുടെ ആധാർ കാർഡിന്റെ ഫോട്ടോ അപ്‌ലോഡ് ചെയ്യുക. ഞങ്ങളുടെ AI അതിന്റെ ആധികാരികത വിശകലനം ചെയ്യുകയും പ്രധാന വിവരങ്ങൾ എടുക്കുകയും ചെയ്യും.\",\n            aadhaarPhoto: \"ആധാർ ഫോട്ടോ\",\n            aadhaarPreviewAlt: \"ആധാർ പ്രിവ്യൂ\",\n            noAadhaarFileSelectedDesc: \"പരിശോധിക്കാൻ ഒരു ആധാർ ചിത്രം തിരഞ്ഞെടുക്കുക.\",\n            extractedInfo: \"എടുത്ത വിവരങ്ങൾ\",\n            name: \"പേര്\",\n            aadhaarNumber: \"ആധാർ നമ്പർ\",\n            dob: \"ജനന തീയതി\",\n            gender: \"ലിംഗം\"\n        }\n    }\n};\n\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('en');\n\n  const t = (key: string, section: string = 'login') => {\n    return translations[section]?.[language]?.[key] || key;\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}